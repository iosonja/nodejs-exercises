{"version":3,"sources":["services/persons.js","components/Person.js","components/PersonsList.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axiosInterface","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","updatedObject","put","Person","person","persons","setPersons","setMessage","setMessageType","name","number","onClick","window","confirm","personsService","setTimeout","catch","error","console","log","filter","p","PersonsList","toLowerCase","includes","map","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","existingPerson","find","updated","concat","personObject","returnedPersons","value","onChange","target","type","Filter","setFilter","Notification","message","className","App","messageType","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a879352.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n\n  const remove = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n  }\n  \n  const update = updatedObject => {\n    const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\n    return request.then(response => response.data)\n  }\n\n// The extra step below stops a warning\nconst axiosInterface = { getAll, create, remove, update }\n\nexport default axiosInterface;","import React from 'react'\nimport personsService from '../services/persons'\n\nconst Person = ({ person, persons, setPersons, setMessage, setMessageType }) => {\n\n  const removePerson = () => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personsService\n      .remove(person.id)\n      .then(() => {\n        setMessage(`Information of ${person.name} was deleted.`)\n        setMessageType('announcement')\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType('')\n        }, 5000)\n      })\n      .catch(error => {\n        console.log(\"Error in deleting person\")\n        setMessage(`Information of ${person.name} has already been removed from the server`)\n        setMessageType('error')\n        setTimeout(() => {\n          setMessage(null)\n          setMessageType('')\n        }, 5000)\n      })\n    }\n    setPersons(persons.filter(p => p.id !== person.id))\n  }\n\n  return (\n    <div>\n      {person.name} {person.number}\n      <button \n        onClick={removePerson} \n        id={person.id}\n      >\n        delete\n      </button>\n    </div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst PersonsList = ({ persons, setPersons, filter, setMessage, setMessageType }) => {\n\n  return (\n    <div>\n      {persons.filter(person => person.name\n                                  .toLowerCase()\n                                  .includes(filter.toLowerCase()))\n              .map(person =>\n                <Person \n                  key={person.id} \n                  person={person}\n                  persons={persons}\n                  setPersons={setPersons}\n                  setMessage={setMessage}\n                  setMessageType={setMessageType}\n                />\n      )}\n    </div>\n  )\n}\n\nexport default PersonsList","import React, { useState } from 'react'\nimport personsService from '../services/persons'\n\nconst PersonForm = ({ persons, setPersons, setMessage, setMessageType }) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n\n  const handleName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.map(person => person.name).includes(newName)) {\n      const existingPerson = persons.find(p => p.name === newName)\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        existingPerson.number = newNumber\n\n        personsService\n          .update(existingPerson)\n          .then(updated => {\n            setPersons(persons.filter(p => p.name !== newName).concat(updated))\n            setNewName('')\n            setNewNumber('')\n          })\n          .then(() => {\n            setMessage(`Updated the number for ${newName}`)\n            setMessageType('announcement')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('')\n            }, 5000)\n          })\n          .catch((error) => {\n            console.log(\"Error in updating the number\")\n            setMessage(`Could not update the number for ${newName}`)\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('')\n            }, 5000)\n          })\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      personsService\n        .create(personObject)\n        .then(returnedPersons => {\n          setPersons(persons.concat(returnedPersons))\n          setNewName('')\n          setNewNumber('')\n        })\n        .then(() => {\n          setMessage(`Added ${newName}`)\n          setMessageType('announcement')\n          setTimeout(() => {\n            setMessage(null)\n            setMessageType('')\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n      <form onSubmit={addPerson}>\n        <div id='nameField'>\n          name: <input \n            value={newName}\n            onChange={handleName}\n          />\n        </div>\n        <div id='numberField'>\n          number: <input\n            value={newNumber}\n            onChange={handleNumber}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = ({ filter, setFilter }) => {\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div id='searchField'>\n      filter names: <input\n        value={filter}\n        onChange={handleFilter}\n      />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (type === 'error') {\n    return (\n      <div className=\"error\">\n      {message}\n    </div>\n    )\n  } else if (type=== 'announcement') {\n    return (\n      <div className=\"announcement\">\n        {message}\n      </div>\n    )\n  } else {\n    return null\n  }\n\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonsList from './components/PersonsList'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState('')\n  const [messageType, setMessageType ] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })  \n      .catch(error => {\n        console.log('fail')\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType} />\n      <Filter filter={filter} setFilter={setFilter} />\n      <h3>Add new contact</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} setMessageType={setMessageType} />\n      <h3>Numbers</h3>\n      <PersonsList persons={persons} setPersons={setPersons} filter={filter} setMessage={setMessage} setMessageType={setMessageType} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}